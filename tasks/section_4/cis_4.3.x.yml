---

- name: "4.3.1 | PATCH | Ensure sudo is installed"
  ansible.builtin.package:
      name: sudo
      state: present
  when:
      - amzn2023cis_rule_4_3_1
  tags:
      - level1-server
      - patch
      - sudo
      - rule_4.3.1
      - NIST800-53R5_AC-6

- name: "4.3.2 | PATCH | Ensure sudo commands use pty"
  ansible.builtin.lineinfile:
      path: /etc/sudoers
      line: "Defaults    use_pty"
      validate: '/usr/sbin/visudo -cf %s'
  when:
      - amzn2023cis_rule_4_3_2
  tags:
      - level1-server
      - patch
      - sudo
      - rule_4.3.2

- name: "4.3.3 | PATCH | Ensure sudo log file exists"
  ansible.builtin.lineinfile:
      path: /etc/sudoers
      regexp: '^Defaults    logfile='
      line: 'Defaults    logfile="{{ amzn2023cis_sudolog_location }}"'
      validate: '/usr/sbin/visudo -cf %s'
  when:
      - amzn2023cis_rule_4_3_3
  tags:
      - level1-server
      - patch
      - sudo
      - rule_4.3.3

- name: "4.3.4 | PATCH | Ensure re-authentication for privilege escalation is not disabled globally"
  ansible.builtin.replace:
      path: "{{ item }}"
      regexp: '^([^#].*)!authenticate(.*)'
      replace: '\1authenticate\2'
      validate: '/usr/sbin/visudo -cf %s'
  loop: "{{ amzn2023cis_sudoers_files.stdout_lines }}"
  when:
      - amzn2023cis_rule_4_3_4
  tags:
      - level1-server
      - patch
      - sudo
      - rule_4.3.4
      - NIST800-53R5_AC-6

- name: "4.3.5 | PATCH | Ensure sudo authentication timeout is configured correctly"
  block:
      - name: "4.3.5 | AUDIT | Ensure sudo authentication timeout is configured correctly | Get files with timeout set"
        ansible.builtin.shell: grep -is 'timestamp_timeout' /etc/sudoers /etc/sudoers.d/* | cut -d":" -f1 | uniq | sort
        changed_when: false
        failed_when: false
        register: amzn2023cis_4_3_5_timeout_files

      - name: "4.3.5 | PATCH | Ensure sudo authentication timeout is configured correctly | Set value if no results"
        ansible.builtin.lineinfile:
            path: /etc/sudoers
            regexp: 'Defaults timestamp_timeout='
            line: "Defaults timestamp_timeout={{ amzn2023cis_sudo_timestamp_timeout }}"
            validate: '/usr/sbin/visudo -cf %s'
        when: amzn2023cis_4_3_5_timeout_files.stdout | length == 0

      - name: "4.3.5 | PATCH | Ensure sudo authentication timeout is configured correctly | Set value if has results"
        ansible.builtin.replace:
            path: "{{ item }}"
            regexp: 'timestamp_timeout=(\d+)'
            replace: "timestamp_timeout={{ amzn2023cis_sudo_timestamp_timeout }}"
            validate: '/usr/sbin/visudo -cf %s'
        loop: "{{ amzn2023cis_4_3_5_timeout_files.stdout_lines }}"
        when: amzn2023cis_4_3_5_timeout_files.stdout | length > 0
  when:
      - amzn2023cis_rule_4_3_5
  tags:
      - level1-server
      - patch
      - sudo
      - rule_4.3.5
      - NIST800-53R5_AC-6

- name: "4.3.6 | PATCH | Ensure access to the su command is restricted"
  block:
      - name: "4.3.6 | PATCH | Ensure access to the su command is restricted | Ensure sugroup exists"
        ansible.builtin.group:
            name: "{{ amzn2023cis_sugroup }}"
            state: present
        register: amzn2023cis_4_3_6_sugroup

      - name: "4.3.6 | PATCH | Ensure access to the su command is restricted | remove users from group"
        ansible.builtin.lineinfile:
            path: /etc/group
            regexp: '^{{ amzn2023cis_sugroup }}(:.:.*:).*$'
            line: '{{ amzn2023cis_sugroup }}\g<1>'
            backrefs: true

      - name: "4.3.6 | PATCH | Ensure access to the su command is restricted | Setting pam_wheel to use_uid"
        ansible.builtin.lineinfile:
            path: /etc/pam.d/su
            regexp: '^(#)?auth\s+required\s+pam_wheel\.so'
            line: 'auth           required        pam_wheel.so use_uid group={{ amzn2023cis_sugroup }}'
  when:
      - amzn2023cis_rule_4_3_6
  tags:
      - level1-server
      - patch
      - sudo
      - rule_4.3.6
      - NIST800-53R5_AC-3
      - NIST800-53R5_MP-2
